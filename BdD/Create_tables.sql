
CREATE TABLE Theme(
	id NUMBER GENERATED by default on null as IDENTITY,
	nomTheme varchar(100) not null unique
);

ALTER TABLE Theme ADD(
	constraint theme_pk primary key (id)
);


CREATE TABLE Cirque(
	id NUMBER GENERATED by default on null as IDENTITY,
	nom varchar(100) not null unique
);

ALTER TABLE Cirque ADD (
	constraint cirque_pk primary key (id)
);


CREATE TABLE Artiste(
	id NUMBER GENERATED by default on null as IDENTITY,
	nom varchar(100) not null,
	prenom varchar(100) not null,
	dateNaissance date not null,
	adresse varchar(255) not null,
	idCirque NUMBER,
	constraint Artiste_fk foreign key (idCirque) references Cirque(id) 
);

ALTER TABLE Artiste ADD (
	constraint Artiste_pk primary key (id)
);

CREATE TABLE Expert(
	idArtiste NUMBER,
	idTheme NUMBER,
	constraint Expert_theme_fk foreign key (idTheme) references Theme(id),
	constraint Expert_artiste_fk foreign key (idArtiste) references Artiste(id)
);

ALTER TABLE Expert ADD (
	constraint Expert_pk primary key (idArtiste)
);


CREATE TABLE Artiste_Pseudo(
	idArtiste NUMBER,
	pseudo varchar(100) not null,
	constraint Artiste_Pseudo_fk foreign key (idArtiste) references Artiste(id)
);

ALTER TABLE Artiste_Pseudo ADD (
	constraint Artiste_Pseudo_pk primary key (idArtiste, pseudo)
);



CREATE TABLE Artiste_Telephone(
	idArtiste NUMBER primary key foreign key references Artiste(id),
	numTel char(10) not null
);

CREATE TABLE Numero(
	code NUMBER GENERATED by default on null as IDENTITY,
	titre varchar(100) not null,
	theme NUMBER foreign key references Theme(id),
	resume varchar(500) not null,
	duree int(2) not null check (duree >= 20 and duree <= 40)
);

CREATE TABLE Artiste_Participe(
	idArtiste NUMBER foreign key references Artiste(id),
	codeNumero NUMBER foreign key references Numero(code),
	primary key (idArtiste, codeNumero)
);

CREATE TABLE Artiste_Principal(
	codeNumero NUMBER primary key foreign key references Numero(code),
	idArtiste NUMBER foreign key references Artiste(id)
);

CREATE TABLE Expert_Evaluation(
	idExpert NUMBER foreign key references Expert(idArtiste),
	codeNumero NUMBER foreign key references Numero(code),
	commentaire varchar(500),
	note int(2) check (note is null or (note >= 0 and note <=10)),
	primary key (idExpert, codeNumero)
);

CREATE TABLE Festival(
	id NUMBER GENERATED by default on null as IDENTITY,
	dateDebut date not null,
	dateFin date not null
);

CREATE TABLE Classement(
	idFestival NUMBER foreign key references Festival(id),
	codeNumero NUMBER foreign key references Numero(code),
	classement int(3) not null default 0,
	primary key (idFestival, codeNumero)
);

CREATE TABLE Spectacle(
	id NUMBER GENERATED by default on null as IDENTITY,
	idFestival NUMBER foreign key references Festival(id),
	theme NUMBER foreign key references Theme(id),
	numJour int(1) not null,
	heureDebut time not null,
	heureFin time not null,
	prix float not null,
	idArtistePresentateur NUMBER foreign key references Artiste(id)
);

CREATE TABLE Spectacle_Numeros(
	idSpectacle NUMBER foreign key references Spectacle(id),
	codeNumero NUMBER foreign key references Numero(code),
	heurePassage time not null,
	primary key (idSpectacle, codeNumero)
);